import json
import os
from telegram import Update, Bot
from telegram.ext import Updater, CommandHandler, CallbackContext
from dotenv import load_dotenv

load_dotenv()

MANAGER_BOT_TOKEN = os.getenv('7913791680:AAHmO83t1vF7GzTi80msCLloSV7cAufWbKo')
ADMIN_ID = int(os.getenv('7832264582'))
CONTACT = os.getenv('@rahbro22')

USERS_FILE = 'users.json'

def load_users():
    try:
        with open(USERS_FILE, 'r') as f:
            return json.load(f)
    except FileNotFoundError:
        return {}

def save_users(users):
    with open(USERS_FILE, 'w') as f:
        json.dump(users, f, indent=2)

def start(update: Update, context: CallbackContext):
    update.message.reply_text(
        "‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ! ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶ü ‡¶π‡ßã‡¶∏‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø /addtoken <your_bot_token> ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡¶ü‡¶ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§
"
        "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶ü ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶ú‡¶Æ‡¶æ ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶™‡¶∞‡ßá /mybot ‡¶¶‡¶ø‡ßü‡ßá ‡¶¨‡¶ü ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®‡•§"
    )

def add_token(update: Update, context: CallbackContext):
    users = load_users()
    user_id = str(update.message.from_user.id)

    if len(context.args) != 1:
        update.message.reply_text("‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞: /addtoken <YOUR_BOT_TOKEN>")
        return

    token = context.args[0]

    # ‡¶∏‡¶π‡¶ú ‡¶Ø‡¶æ‡¶ö‡¶æ‡¶á - ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶ï‡¶Æ‡¶™‡¶ï‡ßç‡¶∑‡ßá 20 ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶æ‡¶∞
    if len(token) < 20 or ':' not in token:
        update.message.reply_text("‚ùå ‡¶ü‡ßã‡¶ï‡ßá‡¶®‡¶ü‡¶ø ‡¶∏‡¶†‡¶ø‡¶ï ‡¶Æ‡¶®‡ßá ‡¶π‡¶ö‡ßç‡¶õ‡ßá ‡¶®‡¶æ, ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶∏‡¶†‡¶ø‡¶ï ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶¶‡¶ø‡¶®‡•§")
        return

    users[user_id] = token
    save_users(users)
    update.message.reply_text("‚úÖ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶ü ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶∏‡ßá‡¶≠ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá! ‡¶è‡¶ñ‡¶® /mybot ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶¶‡¶ø‡ßü‡ßá ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§")

def mybot(update: Update, context: CallbackContext):
    users = load_users()
    user_id = str(update.message.from_user.id)

    if user_id not in users:
        update.message.reply_text("‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶ü ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø‡•§ ‡¶Ü‡¶ó‡ßá /addtoken ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶¶‡¶ø‡¶®‡•§")
        return

    token = users[user_id]
    try:
        user_bot = Bot(token=token)
        user_bot.send_message(chat_id=update.message.chat_id, text="‚úÖ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶ü ‡¶∏‡¶†‡¶ø‡¶ï‡¶≠‡¶æ‡¶¨‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶õ‡ßá!")
        update.message.reply_text("‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶ü ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶™‡¶æ‡¶†‡¶ø‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§")
    except Exception as e:
        update.message.reply_text(f"‡¶¨‡¶ü ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶™‡¶æ‡¶†‡¶æ‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá: {e}")

def admin_panel(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    if user_id != ADMIN_ID:
        update.message.reply_text("‚ùå ‡¶Ü‡¶™‡¶®‡¶ø ‡¶è‡¶á ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶§‡¶ø ‡¶™‡¶æ‡¶®‡¶®‡¶ø‡•§")
        return

    users = load_users()
    total_users = len(users)
    text = f"üõ†Ô∏è *Admin Panel*

üë• ‡¶Æ‡ßã‡¶ü ‡¶á‡¶â‡¶ú‡¶æ‡¶∞: {total_users}

üìû Contact: {CONTACT}"
    update.message.reply_text(text, parse_mode='Markdown')

def main():
    updater = Updater(MANAGER_BOT_TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("addtoken", add_token))
    dp.add_handler(CommandHandler("mybot", mybot))
    dp.add_handler(CommandHandler("admin", admin_panel))

    updater.start_polling()
    print("Bot started...")
    updater.idle()

if __name__ == '__main__':
    main()
